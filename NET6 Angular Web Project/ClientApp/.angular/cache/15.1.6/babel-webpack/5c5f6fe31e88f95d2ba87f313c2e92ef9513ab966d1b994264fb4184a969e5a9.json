{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./register.service\";\nimport * as i3 from \"@angular/common\";\nfunction RegisterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Registrado.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User Name must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Full Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Full Name must be at least 5 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Company is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Company must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Area is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Area must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Reference is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder, registerService) {\n    this.formBuilder = formBuilder;\n    this.registerService = registerService;\n    this.isRegistered = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      //email: ['', [Validators.required, Validators.email]],\n      email: ['daniel@mail.com', [Validators.required]],\n      userName: ['dangeles', [Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern('.*')]],\n      password: ['123456', [Validators.required, Validators.minLength(6), Validators.maxLength(100)]],\n      confirmPassword: ['123456', [Validators.required]],\n      nombreCompleto: ['Daniel A', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      empresa: ['COMPANY', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      area: ['TII', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      referencia: ['COMPANY', [Validators.required]]\n    }, {\n      //validator: this.mustMatch('password', 'confirmPassword')\n    });\n  }\n  mustMatch(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n  // Método para manejar el evento submit\n  onSubmit() {\n    // Comprueba si el formulario es válido\n    if (this.registerForm.valid) {\n      // Aquí se manejaría la lógica para enviar los datos a tu servidor\n      // Por ejemplo:\n      this.registerService.registerUser(this.registerForm.value).subscribe(response => {\n        console.debug('Registro Exitoso. | ' + JSON.stringify(response));\n        this.isRegistered = true;\n      }, error => {\n        console.error('Hubo un error al registrar el usuario', error);\n      });\n    } else {\n      // Marca todos los controles como 'touched' para activar las validaciones\n      console.debug('Corrije los errores.');\n      this.registerForm.markAllAsTouched();\n      // Imprimir los errores de cada control individual\n      Object.keys(this.registerForm.controls).forEach(key => {\n        const controlErrors = this.registerForm.get(key)?.errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            console.log('Key control: ' + key + ', keyError: ' + keyError + ', err value: ', controlErrors[keyError]);\n          });\n        }\n      });\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegisterService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 52,\n  vars: 17,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"type\", \"text\", \"formControlName\", \"userName\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\"], [\"type\", \"text\", \"formControlName\", \"nombreCompleto\"], [\"type\", \"text\", \"formControlName\", \"empresa\"], [\"type\", \"text\", \"formControlName\", \"area\"], [\"type\", \"text\", \"formControlName\", \"referencia\"], [\"type\", \"submit\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RegisterComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n      i0.ɵɵtext(4, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵtemplate(6, RegisterComponent_div_6_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(7, RegisterComponent_div_7_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"User Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(13, RegisterComponent_div_13_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n      i0.ɵɵtext(16, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 4);\n      i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\")(21, \"label\");\n      i0.ɵɵtext(22, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 5);\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\")(27, \"label\");\n      i0.ɵɵtext(28, \"Full Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 6);\n      i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\")(33, \"label\");\n      i0.ɵɵtext(34, \"Company:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 7);\n      i0.ɵɵtemplate(36, RegisterComponent_div_36_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(37, RegisterComponent_div_37_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\")(39, \"label\");\n      i0.ɵɵtext(40, \"Area:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 8);\n      i0.ɵɵtemplate(42, RegisterComponent_div_42_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(43, RegisterComponent_div_43_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\")(45, \"label\");\n      i0.ɵɵtext(46, \"Reference:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"input\", 9);\n      i0.ɵɵtemplate(48, RegisterComponent_div_48_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\")(50, \"button\", 10);\n      i0.ɵɵtext(51, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      let tmp_11_0;\n      let tmp_12_0;\n      let tmp_13_0;\n      let tmp_14_0;\n      let tmp_15_0;\n      let tmp_16_0;\n      i0.ɵɵproperty(\"ngIf\", ctx.isRegistered);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.required) && ((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors.email) && ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"userName\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.required) && ((tmp_4_0 = ctx.registerForm.get(\"userName\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.registerForm.get(\"userName\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors.minlength) && ((tmp_5_0 = ctx.registerForm.get(\"userName\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors.required) && ((tmp_6_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors.minlength) && ((tmp_7_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_7_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors.required) && ((tmp_8_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_8_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_9_0.errors == null ? null : tmp_9_0.errors.mustMatch) && ((tmp_9_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_9_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.registerForm.get(\"nombreCompleto\")) == null ? null : tmp_10_0.errors == null ? null : tmp_10_0.errors.required) && ((tmp_10_0 = ctx.registerForm.get(\"nombreCompleto\")) == null ? null : tmp_10_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.registerForm.get(\"nombreCompleto\")) == null ? null : tmp_11_0.errors == null ? null : tmp_11_0.errors.minlength) && ((tmp_11_0 = ctx.registerForm.get(\"nombreCompleto\")) == null ? null : tmp_11_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.registerForm.get(\"empresa\")) == null ? null : tmp_12_0.errors == null ? null : tmp_12_0.errors.required) && ((tmp_12_0 = ctx.registerForm.get(\"empresa\")) == null ? null : tmp_12_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_13_0 = ctx.registerForm.get(\"empresa\")) == null ? null : tmp_13_0.errors == null ? null : tmp_13_0.errors.minlength) && ((tmp_13_0 = ctx.registerForm.get(\"empresa\")) == null ? null : tmp_13_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_14_0 = ctx.registerForm.get(\"area\")) == null ? null : tmp_14_0.errors == null ? null : tmp_14_0.errors.required) && ((tmp_14_0 = ctx.registerForm.get(\"area\")) == null ? null : tmp_14_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_15_0 = ctx.registerForm.get(\"area\")) == null ? null : tmp_15_0.errors == null ? null : tmp_15_0.errors.minlength) && ((tmp_15_0 = ctx.registerForm.get(\"area\")) == null ? null : tmp_15_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_16_0 = ctx.registerForm.get(\"referencia\")) == null ? null : tmp_16_0.errors == null ? null : tmp_16_0.errors.required) && ((tmp_16_0 = ctx.registerForm.get(\"referencia\")) == null ? null : tmp_16_0.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","formBuilder","registerService","ngOnInit","registerForm","group","email","required","userName","minLength","maxLength","pattern","password","confirmPassword","nombreCompleto","empresa","area","referencia","mustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","value","setErrors","onSubmit","valid","registerUser","subscribe","response","console","debug","JSON","stringify","isRegistered","error","markAllAsTouched","Object","keys","forEach","key","controlErrors","get","keyError","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\FINAMEX\\NET6 Angular Web Project\\NET6 Angular Web Project\\ClientApp\\src\\app\\components\\register\\register.component.ts","C:\\FINAMEX\\NET6 Angular Web Project\\NET6 Angular Web Project\\ClientApp\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\r\nimport { RegisterService } from './register.service'; // Asegúrate de que esta ruta sea correcta.\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm!: FormGroup;\r\n  isRegistered = false;\r\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      //email: ['', [Validators.required, Validators.email]],\r\n      email: ['daniel@mail.com', [Validators.required]],\r\n      userName: ['dangeles', [Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern('.*')]],\r\n      password: ['123456', [Validators.required, Validators.minLength(6), Validators.maxLength(100)]],\r\n      confirmPassword: ['123456', [Validators.required]],\r\n      nombreCompleto: ['Daniel A', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\r\n      empresa: ['COMPANY', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n      area: ['TII', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n      referencia: ['COMPANY', [Validators.required]]\r\n    }, {\r\n      //validator: this.mustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  mustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        return;\r\n      }\r\n\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método para manejar el evento submit\r\n  onSubmit() {\r\n    // Comprueba si el formulario es válido\r\n    if (this.registerForm.valid) {\r\n      // Aquí se manejaría la lógica para enviar los datos a tu servidor\r\n      // Por ejemplo:\r\n      this.registerService.registerUser(this.registerForm.value).subscribe(response => {\r\n        console.debug('Registro Exitoso. | ' + JSON.stringify(response));\r\n        this.isRegistered = true;\r\n      }, error => {\r\n        console.error('Hubo un error al registrar el usuario', error);\r\n      });\r\n    } else {\r\n      // Marca todos los controles como 'touched' para activar las validaciones\r\n      console.debug('Corrije los errores.');\r\n      this.registerForm.markAllAsTouched();\r\n\r\n      // Imprimir los errores de cada control individual\r\n      Object.keys(this.registerForm.controls).forEach(key => {\r\n        const controlErrors: ValidationErrors | null | undefined = this.registerForm.get(key)?.errors;\r\n        if (controlErrors != null) {\r\n          Object.keys(controlErrors).forEach(keyError => {\r\n            console.log('Key control: ' + key + ', keyError: ' + keyError + ', err value: ', controlErrors[keyError]);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isRegistered\">\r\n  <h2>Registrado.</h2>\r\n</div>\r\n\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div>\r\n    <label>Email:</label>\r\n    <input type=\"email\" formControlName=\"email\">\r\n    <div *ngIf=\"registerForm.get('email')?.errors?.required && registerForm.get('email')?.touched\">Email is required</div>\r\n    <div *ngIf=\"registerForm.get('email')?.errors?.email && registerForm.get('email')?.touched\">Email is invalid</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>User Name:</label>\r\n    <input type=\"text\" formControlName=\"userName\">\r\n    <div *ngIf=\"registerForm.get('userName')?.errors?.required && registerForm.get('userName')?.touched\">User Name is required</div>\r\n    <div *ngIf=\"registerForm.get('userName')?.errors?.minlength && registerForm.get('userName')?.touched\">User Name must be at least 3 characters</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Password:</label>\r\n    <input type=\"password\" formControlName=\"password\">\r\n    <div *ngIf=\"registerForm.get('password')?.errors?.required && registerForm.get('password')?.touched\">Password is required</div>\r\n    <div *ngIf=\"registerForm.get('password')?.errors?.minlength && registerForm.get('password')?.touched\">Password must be at least 6 characters</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Confirm Password:</label>\r\n    <input type=\"password\" formControlName=\"confirmPassword\">\r\n    <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.required && registerForm.get('confirmPassword')?.touched\">Confirm Password is required</div>\r\n    <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.mustMatch && registerForm.get('confirmPassword')?.touched\">Passwords do not match</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Full Name:</label>\r\n    <input type=\"text\" formControlName=\"nombreCompleto\">\r\n    <div *ngIf=\"registerForm.get('nombreCompleto')?.errors?.required && registerForm.get('nombreCompleto')?.touched\">Full Name is required</div>\r\n    <div *ngIf=\"registerForm.get('nombreCompleto')?.errors?.minlength && registerForm.get('nombreCompleto')?.touched\">Full Name must be at least 5 characters</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Company:</label>\r\n    <input type=\"text\" formControlName=\"empresa\">\r\n    <div *ngIf=\"registerForm.get('empresa')?.errors?.required && registerForm.get('empresa')?.touched\">Company is required</div>\r\n    <div *ngIf=\"registerForm.get('empresa')?.errors?.minlength && registerForm.get('empresa')?.touched\">Company must be at least 3 characters</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Area:</label>\r\n    <input type=\"text\" formControlName=\"area\">\r\n    <div *ngIf=\"registerForm.get('area')?.errors?.required && registerForm.get('area')?.touched\">Area is required</div>\r\n    <div *ngIf=\"registerForm.get('area')?.errors?.minlength && registerForm.get('area')?.touched\">Area must be at least 3 characters</div>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Reference:</label>\r\n    <input type=\"text\" formControlName=\"referencia\">\r\n    <div *ngIf=\"registerForm.get('referencia')?.errors?.required && registerForm.get('referencia')?.touched\">Reference is required</div>\r\n  </div>\r\n\r\n  <div>\r\n    <button type=\"submit\">Register</button>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}